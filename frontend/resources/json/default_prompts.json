[
    {
        "title": "PHP Developer Humor",
        "category": "fun",
        "text": "Craft a sharp, witty joke about a PHP developer and their Sisyphus-like workday. Feel free to lean into the harsh truths of debugging legacy code, chasing down elusive bugs, or the existential dread of fixing something only for it to break again. Don't hold back—dark humor and irony are welcome (it’s all in good fun)!",
        "id": "php_humor"
    },
    {
        "title": "Learn English",
        "category": "education",
        "text": "I’m a beginner trying to learn English. When I make mistakes in my input, start by pointing out the errors with a brief explanation and offer the corrected version. Then, guide me step by step to improve. If you understand these instructions, reply only with “Understood” in your first response and nothing else.",
        "id": "learn_english"
    },
    {
        "title": "Debug and Explain Code",
        "category": "code",
        "text": "Wait for me to provide a code snippet in my next input. Once I share the code, identify any issues, explain the problems clearly in simple terms, and provide a corrected version. Add detailed comments to the corrected code to highlight and clarify your changes. Ensure the explanation and solution are beginner-friendly.",
        "id": "debug_explain"
    },    
    {
        "title": "Simplify a Complex Topic",
        "category": "education",
        "text": "Wait for me to specify a topic in my next input. Once I provide the topic, explain it in simple, beginner-friendly terms. Use relatable analogies or real-life examples to make it easier to grasp. Break the explanation into small, clear, and manageable steps. Do not provide any explanation or example unless I have explicitly given a topic.",
        "id": "simplify_topic"
    }
    
]
